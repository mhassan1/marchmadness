service: marchmadness

frameworkVersion: '3'

plugins:
  - serverless-hooks

custom:
  serverless-hooks: {}

provider:
  name: aws
  runtime: nodejs14.x
  profile: marchmadness
  memorySize: 512
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:BatchWriteItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::GetAtt:
            - sessionsTable
            - Arn
        - Fn::GetAtt:
            - mappingsTable
            - Arn
        - Fn::GetAtt:
            - usersTable
            - Arn

package:
  exclude:
    - .idea/**
    - .vscode/**
    - .env
    - .yarn/**

resources:
  Resources:
    sessionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: madness_sessions_${opt:stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    mappingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: madness_bracket_mappings_${opt:stage}
        AttributeDefinitions:
          - AttributeName: bracket_id
            AttributeType: N
        KeySchema:
          - AttributeName: bracket_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: madness_users_${opt:stage}
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    oddsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: madness_odds_${opt:stage}
        AttributeDefinitions:
          - AttributeName: source
            AttributeType: S
        KeySchema:
          - AttributeName: source
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

functions:
  marchmadness:
    handler: lambda.handler
    environment:
      STAGE: ${opt:stage}
    events:
      - httpApi: '*'
      - schedule:
          rate: rate(15 minutes)
